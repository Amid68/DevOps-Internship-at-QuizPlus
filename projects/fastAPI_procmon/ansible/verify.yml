---
# verify.yml
# Post-deployment verification playbook
# Run this after deployment to ensure everything is working correctly

- name: Verify FastAPI Deployment Health
  hosts: ec2_servers
  become: false  # Don't need root for verification
  gather_facts: false
  
  vars:
    public_port: 443
    # Define the endpoints we expect to be working
    # These are specific to our FastAPI application
    critical_endpoints:
      - path: "/healthz"
        name: "Health Check"
      - path: "/processes"
        name: "Process Monitor"
  
  tasks:
    - name: Check application health endpoint
      uri:
        url: "https://{{ ansible_host }}{{ item.path }}"
        method: GET
        status_code: 200
        validate_certs: no
        timeout: 10  
      loop: "{{ critical_endpoints }}"
      register: endpoint_checks
      failed_when: false
      retries: 3
      delay: 2 
    
    - name: Evaluate endpoint results
      set_fact:
        failed_endpoints: "{{ endpoint_checks.results | selectattr('status', 'undefined') | list + 
                              endpoint_checks.results | selectattr('status', 'ne', 200) | list }}"
    
    - name: Report verification results
      debug:
        msg: "‚úÖ All endpoints are healthy"
      when: failed_endpoints | length == 0
    
    - name: Report failed endpoints
      fail:
        msg: |
          ‚ùå Verification failed! The following endpoints are not responding:
          {% for endpoint in failed_endpoints %}
          - {{ endpoint.item.name }}: {{ endpoint.msg | default('No response') }}
          {% endfor %}
      when: failed_endpoints | length > 0
    
    - name: Measure application response time
      # Simple performance check to ensure the app is responsive
      shell: |
        total_time=0
        iterations=5
        
        for i in $(seq 1 $iterations); do
          response_time=$(curl -o /dev/null -s -w '%{time_total}' https://{{ ansible_host }}/processes)
          total_time=$(echo "$total_time + $response_time" | bc)
        done
        
        avg_time=$(echo "scale=3; $total_time / $iterations" | bc)
        echo "$avg_time"
      register: response_time
      changed_when: false
    
    - name: Check which container is currently active
      uri:
        url: "https://{{ ansible_host }}/healthz"
        method: GET
      register: health_response
      changed_when: false
    
    - name: Identify active container from Docker
      shell: |
        if docker ps --format "table {{.Names}}" | grep -q "fastapi-procmon-blue"; then
          echo "blue"
        elif docker ps --format "table {{.Names}}" | grep -q "fastapi-procmon-green"; then
          echo "green"
        else
          echo "unknown"
        fi
      become: true
      become_user: ubuntu
      register: active_container
      changed_when: false
    
    - name: Display verification summary
      debug:
        msg:
          - "üéØ Deployment Verification Complete"
          - "üìä Active Container: {{ active_container.stdout }}"
          - "‚ö° Average Response Time: {{ response_time.stdout }} seconds"
          - "‚úÖ All critical endpoints are operational"
          - "üåê Application URL: https://{{ ansible_host }}"
