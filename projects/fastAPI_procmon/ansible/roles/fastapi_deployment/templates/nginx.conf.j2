# roles/fastapi_deployment/templates/nginx.conf.j2
# Nginx configuration template for FastAPI blue-green deployment
# Using upstream for better load balancing capabilities in the future

upstream fastapi_backend {
    # Single backend for now, but this structure allows easy expansion
    server 127.0.0.1:{{ backend_port }} max_fails=3 fail_timeout=30s;
}

server {
    listen {{ public_port }} default_server;
    listen [::]:{{ public_port }} default_server;
    
    # Using underscore as default to catch all server names
    server_name _;
    
    # Separate log files for this application
    access_log {{ nginx_access_log }};
    error_log {{ nginx_error_log }};
    
    # Security headers (adding these as best practice for production)
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Health check endpoint for nginx monitoring
    location /nginx-health {
        access_log off;  # Don't log health checks
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Main application proxy
    location / {
        proxy_pass http://fastapi_backend;
        proxy_http_version 1.1;
        
        # Essential proxy headers for proper request forwarding
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Reasonable timeouts for FastAPI application
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Disable buffering for real-time responses
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    # Custom error pages for better user experience
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;  # Only accessible internally
    }
}
